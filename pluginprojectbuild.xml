<!--
- Author : Debadatta Mishra (PIKU)
- Purpose: Ant build script to build the plugin
-->
<project name="com.ddlab.rnd.tornado.eclipse.util" basedir="." default="create.update.site">

	<!-- Set the path of your Eclipse home directory below -->
	<property name="eclipse.home.dir" 					value="E:/dev/Eclipse IDEs/eclipse-ganemede-3.4" />
	<property name="eclipse.plugin.dir" 				value="${eclipse.home.dir}/plugins" />
	<property name="src.dir" 							value="${basedir}/src" />
	<property name="lib.dir" 							value="${basedir}/lib" />
	<property name="dist.dir" 							value="${basedir}/dist" />
	<property name="build.dir" 							value="${basedir}/build" />
	<property name="icons.dir" 							value="${basedir}/icons" />
	<property name="plugins.dir" 						value="${basedir}/plugins" />
	<property name="metainf.dir" 						value="${basedir}/META-INF" />
	<property name="plugin.xml.file" 					value="${basedir}/plugin.xml" />
	<property name="version.no" 						value="1.0.0" />
	<property name="online.update.dir" 					value="${dist.dir}/update" />

	<!-- Set the path -->
	<path id="pluginClasspath">
		<fileset dir="${eclipse.plugin.dir}">
			<include name="**/*.jar" />
		</fileset>
		<fileset dir="${lib.dir}">
			<include name="**/*.jar" />
		</fileset>
	</path>

	<!-- For clen up operation -->
	<target name="clean">
		<delete dir="${build.dir}" />
		<delete dir="${dist.dir}" />
		<delete dir="${plugins.dir}" />
	</target>

	<!-- Create the necessary directories -->
	<target name="init">
		<delete dir="${build.dir}" />
		<mkdir dir="${build.dir}" />
		<delete dir="${dist.dir}" />
		<mkdir dir="${dist.dir}" />
		<delete dir="${plugins.dir}" />
		<mkdir dir="${plugins.dir}" />
	</target>

	<!-- Compile the source code -->
	<target name="compile" depends="init">
		<javac debug="on"  destdir="${build.dir}" source="1.6" target="1.6"
			srcdir="${src.dir}" classpathref="pluginClasspath"
		includeantruntime="true"/>
		<copy todir="${build.dir}">
		   <fileset dir="${src.dir}" includes="**/*.jpg,**/*.png"/>
		</copy>
	</target>

	<!-- Copy files and folders into respective directories -->
	<target name="copyAll" depends="compile">
		<copydir dest="${build.dir}/lib" src="${lib.dir}"/>
		<copydir dest="${build.dir}/META-INF" src="${metainf.dir}"/>
		<copydir dest="${build.dir}/icons" src="${icons.dir}"/>
		<copy file="${plugin.xml.file}" todir="${build.dir}" />
		<tstamp>
			<format property="TODAY" pattern="yyyyMMddHHmm" />
		</tstamp>
		<replace file="${build.dir}/META-INF/MANIFEST.MF" token="1.0.0.qualifier" value="${version.no}.${TODAY}">
		</replace>
	</target>
	
	<!-- Create the plugin jar -->
	<target name="createJar" depends="copyAll">
		<jar destfile="${plugins.dir}/${ant.project.name}_${version.no}.${TODAY}.jar" 
			basedir="${build.dir}" manifest="${build.dir}/META-INF/MANIFEST.MF">
		</jar>
		<zip destfile="${dist.dir}/${ant.project.name}.zip" basedir="${plugins.dir}">
		</zip>
	</target>
	
	<!-- Create update site -->
	<target name="create.update.site" depends="createJar">
		<mkdir dir="${online.update.dir}" />
		<delete dir="updatesite" />
		<mkdir dir="${basedir}/updatesite" />
		
		<!-- Creation of features -->
		<mkdir dir="${basedir}/updatesite/tempfeatures" />
		
		<mkdir dir="${basedir}/updatesite/features" />
		<copy file="${basedir}/config/feature.xml" todir="${basedir}/updatesite/tempfeatures" />
		<replace file="${basedir}/updatesite/tempfeatures/feature.xml" token="1.0.0.qualifier" value="${version.no}.${TODAY}"/>
		
		<jar destfile="${basedir}/updatesite/features/${ant.project.name}.feature_${version.no}.${TODAY}.jar" 
			basedir="${basedir}/updatesite/tempfeatures"/>
		
		<copydir dest="${online.update.dir}/features" src="${basedir}/updatesite/features" />
		<copydir dest="${online.update.dir}/plugins" src="${plugins.dir}" />
		
		<copydir dest="${basedir}/updatesite/plugins" src="${plugins.dir}" />
		<delete dir="${basedir}/updatesite/tempfeatures" />
		
		<!-- Creation of artifacts.jar -->
		<mkdir dir="${basedir}/updatesite/tempartifacts" />
		<copy file="${basedir}/config/artifacts.xml" todir="${basedir}/updatesite/tempartifacts" />
		<replace file="${basedir}/updatesite/tempartifacts/artifacts.xml" token="1.0.0.qualifier" value="${version.no}.${TODAY}"/>
		<replace file="${basedir}/updatesite/tempartifacts/artifacts.xml" token="TIME_STAMP" value="${DSTAMP}"/>
		<jar destfile="${basedir}/updatesite/artifacts.jar" 
					basedir="${basedir}/updatesite/tempartifacts"/>
		
		<copy file="${basedir}/updatesite/tempartifacts/artifacts.xml" todir="${online.update.dir}" />
		<delete dir="${basedir}/updatesite/tempartifacts" />
		
		
		<!-- Creation of contents.jar -->
		<mkdir dir="${basedir}/updatesite/tempcontents" />
		<copy file="${basedir}/config/content.xml" todir="${basedir}/updatesite/tempcontents" />
		<replace file="${basedir}/updatesite/tempcontents/content.xml" token="1.0.0.qualifier" value="${version.no}.${TODAY}"/>
		<replace file="${basedir}/updatesite/tempcontents/content.xml" token="TIME_STAMP" value="${DSTAMP}"/>
		<jar destfile="${basedir}/updatesite/content.jar" 
					basedir="${basedir}/updatesite/tempcontents"/>
		
		<copy file="${basedir}/updatesite/tempcontents/content.xml" todir="${online.update.dir}" />
		<delete dir="${basedir}/updatesite/tempcontents" />
		
		
		<!-- Creation of local zip  -->
		<copy file="${basedir}/config/site.xml" todir="${basedir}/updatesite" />
		<replace file="${basedir}/updatesite/site.xml" token="1.0.0.qualifier" value="${version.no}.${TODAY}"/>
		<zip destfile="${dist.dir}/${ant.project.name}.update.zip" basedir="${basedir}/updatesite"/>
		
	</target>
	
	

</project>
